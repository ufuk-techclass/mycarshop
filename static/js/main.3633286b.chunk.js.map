{"version":3,"sources":["components/Addcar.js","components/Editcar.js","components/Carlist.js","App.js","serviceWorker.js","index.js"],"names":["Addcar","props","React","useState","open","setOpen","brand","model","color","fuel","year","price","car","setCar","handleClose","handleInputChange","event","target","name","value","Button","style","margin","variant","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","onChange","e","label","fullWidth","DialogActions","saveCar","Editcar","console","log","updateCar","_links","href","Carlist","cars","setCars","useEffect","fetchData","fetch","then","response","json","data","_embedded","link","method","headers","body","JSON","stringify","res","catch","err","columns","Header","accessor","sortable","filterable","Cell","row","original","size","window","confirm","App","className","AppBar","position","Toolbar","Typography","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3633286b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function Addcar(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [car, setCar] = React.useState({\r\n    brand: \"\",\r\n    model: \"\",\r\n    color: \"\",\r\n    fuel: \"\",\r\n    year: \"\",\r\n    price: \"\"\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setCar({ ...car, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const addCar = () => {\r\n    props.saveCar(car);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{ margin: 10 }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        Add Car\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Car</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"brand\"\r\n            value={car.brand}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Brand\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"model\"\r\n            value={car.model}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Model\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"color\"\r\n            value={car.color}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Color\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"year\"\r\n            value={car.year}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Year\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"fuel\"\r\n            value={car.fuel}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Fuel\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"price\"\r\n            value={car.price}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Price\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addCar} color=\"primary\">\r\n            SAVE\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function Editcar(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [car, setCar] = React.useState({\r\n    brand: \"\",\r\n    model: \"\",\r\n    color: \"\",\r\n    fuel: \"\",\r\n    year: \"\",\r\n    price: \"\"\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    console.log(\"AAAA: \", props.car);\r\n    setCar({\r\n      brand: props.car.brand,\r\n      model: props.car.model,\r\n      color: props.car.color,\r\n      fuel: props.car.fuel,\r\n      year: props.car.year,\r\n      price: props.car.price\r\n    });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setCar({ ...car, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const updateCar = () => {\r\n    props.updateCar(car, props.car._links.car.href);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n        Edit Car\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Edit Car</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"brand\"\r\n            value={car.brand}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Brand\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"model\"\r\n            value={car.model}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Model\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"color\"\r\n            value={car.color}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Color\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"year\"\r\n            value={car.year}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Year\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"fuel\"\r\n            value={car.fuel}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Fuel\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"price\"\r\n            value={car.price}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"Price\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={updateCar} color=\"primary\">\r\n            SAVE\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Addcar from \"./Addcar\";\r\nimport Editcar from \"./Editcar\";\r\n\r\nexport default function Carlist() {\r\n  const [cars, setCars] = useState([]);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  const fetchData = () => {\r\n    fetch(\"https://carstockrest.herokuapp.com/cars\")\r\n      .then(response => response.json())\r\n      .then(data => setCars(data._embedded.cars));\r\n  };\r\n\r\n  const deleteCar = link => {\r\n    if (window.confirm(\"Are you sure???\")) {\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchData())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  const saveCar = car => {\r\n    fetch(\"https://carstockrest.herokuapp.com/cars\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(car)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const updateCar = (car, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(car)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const columns = [\r\n    { Header: \"Brand\", accessor: \"brand\" },\r\n    { Header: \"Model\", accessor: \"model\" },\r\n    { Header: \"Color\", accessor: \"color\" },\r\n    { Header: \"Fuel\", accessor: \"fuel\" },\r\n    { Header: \"Year\", accessor: \"year\" },\r\n    { Header: \"Price\", accessor: \"price\" },\r\n\r\n    {\r\n      sortable: false,\r\n      filterable: false,\r\n      Cell: row => <Editcar updateCar={updateCar} car={row.original} />\r\n    },\r\n\r\n    {\r\n      sortable: false,\r\n      filterable: false,\r\n      accessor: \"_links.self.href\",\r\n      Cell: row => (\r\n        <Button\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={() => deleteCar(row.value)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Addcar saveCar={saveCar} />\r\n      <ReactTable filterable={true} data={cars} columns={columns} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Carlist from \"./components/Carlist\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">News</Typography>\n        </Toolbar>\n      </AppBar>\n      <Carlist />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}